// Generated by CoffeeScript 1.3.3
(function() {
  var User;

  User = (function() {

    function User(client) {
      this.client = client;
    }

    User.prototype.responseHandler = function(errMessage) {
      if (errMessage == null) {
        errMessage = 'Error';
      }
      return function(err, statusCode, responseBody) {
        return callback(err)(err ? statusCode !== 200 ? callback(new Error(errMessage)) : callback(null, responseBody) : void 0);
      };
    };

    User.prototype.get = function(id, callback) {
      if (typeof id === "Array") {
        return this.client.get("/users/batch", {
          "ids": id.join(",")
        }, this.responseHandler("User batch get error"));
      } else {
        return this.client.get("/users/" + id, {}, this.responseHandler("User get error"));
      }
    };

    User.prototype.startups = function(id, callback) {
      return this.client.get("/users/" + id + "/startups", {}, this.responseHandler("User startups get error"));
    };

    User.prototype.search = function(options, callback) {
      if (!(((options != null ? options.slug : void 0) != null) || ((options != null ? options.md5 : void 0) != null))) {
        callback(new Error('No search parameter specified'));
      }
      return this.client.get("/usrs/search", options, this.responseHandler("User search get error"));
    };

    User.prototype.me = function(callback) {
      if (this.client.token == null) {
        callback(new Error('No token provided, method requires authentication'));
      }
      return this.client.get("/users/me", {}, this.responseHandler("User info get error"));
    };

    return User;

  })();

  module.exports = User;

}).call(this);
