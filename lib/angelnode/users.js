// Generated by CoffeeScript 1.3.3
(function() {
  var User;

  User = (function() {

    function User(client) {
      this.client = client;
    }

    User.prototype.responseHandler = function(errMessage, callback) {
      if (errMessage == null) {
        errMessage = 'Error';
      }
      return function(err, statusCode, responseBody) {
        if (err) {
          return callback(err);
        }
        if (statusCode !== 200) {
          return callback(new Error(errMessage));
        } else {
          return callback(null, responseBody);
        }
      };
    };

    User.prototype.get = function(options, callback) {
      if ((options != null ? options.id : void 0) == null) {
        return;
      }
      if (typeof options.id === "Array") {
        return this.client.get("/users/batch", {
          "ids": options.id.join(",")
        }, this.responseHandler("User batch get error", callback));
      } else {
        return this.client.get("/users/" + options.id, {}, this.responseHandler("User get error", callback));
      }
    };

    User.prototype.startups = function(options, callback) {
      if ((options != null ? options.id : void 0) == null) {
        return;
      }
      return this.client.get("/users/" + options.id + "/startups", {}, this.responseHandler("User startups get error", callback));
    };

    User.prototype.search = function(options, callback) {
      if (!((options != null) && ((options.slug != null) || (options.md5 != null)))) {
        return callback(new Error('No search parameter specified'));
      }
      return this.client.get("/usrs/search", options, this.responseHandler("User search get error", callback));
    };

    User.prototype.me = function(callback) {
      if (this.client.token == null) {
        return callback(new Error('No token provided, method requires authentication'));
      }
      return this.client.get("/users/me", {}, this.responseHandler("User info get error", callback));
    };

    return User;

  })();

  module.exports = User;

}).call(this);
